  #include <avr/pgmspace.h>
  #include <Arduino.h>

  //IO settings
  int BUSY_Pin = 8; 
  int RES_Pin = 9; 
  int DC_Pin = 10; 
  int CS_Pin = 11; 
  int SCK_Pin = 12; 
  int SDI_Pin = 13; 

  #define EPD_W21_MOSI_0  digitalWrite(SDI_Pin,LOW)
  #define EPD_W21_MOSI_1  digitalWrite(SDI_Pin,HIGH) 

  #define EPD_W21_CLK_0 digitalWrite(SCK_Pin,LOW)
  #define EPD_W21_CLK_1 digitalWrite(SCK_Pin,HIGH)

  #define EPD_W21_CS_0 digitalWrite(CS_Pin,LOW)
  #define EPD_W21_CS_1 digitalWrite(CS_Pin,HIGH)

  #define EPD_W21_DC_0  digitalWrite(DC_Pin,LOW)
  #define EPD_W21_DC_1  digitalWrite(DC_Pin,HIGH)
  #define EPD_W21_RST_0 digitalWrite(RES_Pin,LOW)
  #define EPD_W21_RST_1 digitalWrite(RES_Pin,HIGH)
  #define isEPD_W21_BUSY digitalRead(BUSY_Pin)

  ////////////////array/////////////////////////
const unsigned char gImage_black1[2756] PROGMEM = { /* 0X81,0X01,0XD4,0X00,0X68,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,
0X03,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0XE3,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X63,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XF8,0X23,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XC7,0XF8,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X8B,0XF9,0X83,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X99,0XF9,0X83,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X99,0XFD,0X83,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X1B,0XFF,0XC3,0XFF,0XFF,0XFE,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFE,0X3F,0XFF,0XC3,0XFF,0XF1,0XFE,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,
0X80,0X3F,0XFF,0XC3,0XFF,0XF1,0XFE,0X7F,0XFF,0XFF,0XFF,0XFF,0XE0,0X3F,0XFF,0XFF,
0X83,0XFF,0XF1,0X1E,0X7F,0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XFF,0X83,0XFF,0XF1,
0X1E,0X7F,0XFF,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0X03,0XFF,0XF1,0X1E,0X7F,0XFF,
0XFF,0XFF,0XFF,0X8F,0XFF,0XFF,0XFF,0X03,0XFF,0XF1,0X1E,0X7F,0XFF,0XFB,0XFF,0XFF,
0X3F,0XFF,0XFF,0XFF,0X03,0XFF,0XF1,0X1E,0X7F,0XFF,0XFB,0XFF,0XFE,0X3F,0XFF,0XFF,
0XFE,0X03,0XFF,0XF1,0X1E,0X7F,0XFF,0XF3,0XFF,0XF8,0X7F,0XFF,0XFF,0XFE,0X03,0XFF,
0XF1,0X1E,0X7F,0XFF,0XE1,0XFF,0XF0,0XFF,0XFF,0XFF,0XFC,0X23,0XFF,0XF1,0X1E,0X7F,
0XFF,0XE1,0XFF,0XC3,0XFF,0XFF,0XFF,0XC0,0XE3,0XFF,0XF1,0X1E,0X7F,0XFF,0XC4,0XFF,
0X87,0XFF,0XFF,0XFF,0X01,0XE3,0XFF,0XF0,0X1E,0X7F,0XFF,0XC4,0XFF,0X8F,0XFF,0XFF,
0XFE,0X01,0XE1,0XFF,0XF0,0X00,0X7F,0XFF,0XCC,0XFF,0X8F,0XFF,0XFF,0XF8,0X07,0XE1,
0XFF,0XF0,0X00,0X7F,0XFF,0XCC,0XFF,0X83,0XFF,0XFF,0XF8,0X3F,0XF1,0XFF,0XF0,0X00,
0X7F,0XFF,0X8C,0XFF,0XC0,0X00,0X3F,0XF8,0X00,0X31,0XFF,0XFF,0XFF,0XFF,0XFF,0X9C,
0XFF,0XE0,0X00,0X3F,0XFE,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0X9C,0XFF,0XE0,0X00,
0X3F,0XFF,0X00,0X00,0XFF,0XF8,0X0F,0X7F,0XFF,0X9C,0XFF,0X00,0X7F,0XFF,0XFF,0XFF,
0X08,0X7F,0XF8,0X0F,0X7F,0XFF,0X9C,0XFF,0X01,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XF8,
0X06,0X7F,0XFF,0X9C,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XC0,0X7F,0XF1,0XC4,0X7F,0XFF,
0X9C,0XFC,0X1F,0XFF,0XFF,0XFF,0XFF,0XC0,0X7F,0XF1,0XC0,0X7F,0XFF,0X9C,0XF8,0X7F,
0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XF1,0XC0,0XFF,0XFF,0X9C,0XF0,0XFF,0XFF,0XFF,0XFF,
0XFF,0XE0,0X7F,0XF1,0XC0,0XFF,0XFF,0X9C,0XE1,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,
0XF1,0XC1,0XFF,0XFF,0X9C,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XF1,0XC3,0XFF,
0XFF,0X98,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XF1,0XC3,0XFF,0XFF,0X98,0X0F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XF1,0XC3,0XFF,0XFF,0X98,0X1F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XF0,0X7F,0XF1,0XC7,0XFF,0XFF,0X80,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,
0X7F,0XF1,0XC7,0XFF,0XFF,0X80,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XF1,0X87,
0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XF0,0X00,0X7F,0XFF,0X80,
0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X07,0XFF,0XF0,0X00,0X7F,0XFF,0XC0,0XFF,0XFF,0XFF,
0XFF,0XC0,0XFE,0X0F,0XFF,0XF0,0X00,0XFF,0XFF,0XC0,0XFF,0XFF,0XFF,0XFF,0X07,0XFE,
0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC1,0XFF,0XFF,0XFF,0XF8,0X1F,0XFF,0X0F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XE1,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0X87,0XFF,0XF8,0X00,0X7F,0XFF,
0XE1,0XFF,0XFF,0XFF,0XE0,0XFF,0XFF,0XC3,0XFF,0XF8,0X00,0X7F,0XFF,0XE1,0XFF,0XFF,
0XFF,0XE1,0XFF,0XFF,0XE1,0XFF,0XF8,0X00,0X7F,0XFF,0XF1,0XFF,0XFF,0XFF,0XE7,0XFF,
0XFF,0XF8,0XFF,0XF0,0XE7,0XFF,0XFF,0XF9,0XFF,0XFF,0XFF,0XE7,0XFF,0XFF,0XF8,0X7F,
0XF1,0XE7,0XFF,0XFF,0XF8,0XFF,0XFF,0XFF,0X8F,0XFF,0XFF,0XF8,0X7F,0XF1,0XE7,0XFF,
0XFF,0XF8,0XFF,0XFF,0XFE,0X1F,0XFF,0XFF,0XFC,0X7F,0XF1,0XE7,0XFF,0XFF,0XF8,0XFF,
0XFF,0XF0,0X1F,0XFF,0XFF,0XFC,0X7F,0XF1,0XE7,0XFF,0XFF,0XFC,0X7F,0XFF,0XC0,0X0F,
0XFF,0XFF,0XFC,0X7F,0XF1,0XE7,0XFF,0XFF,0XFC,0X7F,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,
0X7F,0XF1,0XE7,0XFF,0XFF,0XFC,0X3F,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X7F,0XF1,0XE7,
0XFF,0XFF,0XFC,0X3F,0XFF,0XFF,0XC1,0XFF,0XFF,0XF8,0X7F,0XF0,0XE7,0XFF,0XFF,0XFE,
0X1F,0XFF,0XFF,0XC3,0XFB,0XFF,0XF8,0X7F,0XF8,0X00,0X7F,0XFF,0XFE,0X1F,0XFF,0XFF,
0XC3,0XFB,0XFF,0XF8,0X7F,0XF8,0X00,0X7F,0XFF,0XFF,0X0F,0XFF,0XFF,0XE3,0XE3,0X9F,
0XF8,0X7F,0XFC,0X00,0X7F,0XFF,0XFF,0X0F,0XFF,0XFF,0XE1,0XC0,0X0F,0XF8,0X7F,0XFF,
0XFF,0XFF,0XFF,0XFF,0X80,0X07,0XFF,0XE0,0X80,0X0F,0XF8,0X7F,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X00,0X7F,0XE0,0X00,0X0F,0XF8,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XC0,0X00,
0X3F,0XF0,0X00,0X1F,0XF8,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XF0,0X00,0X0F,0XFF,0X83,
0X3F,0XF8,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFC,0X00,0X07,0XFF,0XE7,0X1F,0XF8,0X7F,
0XFF,0X1F,0XFF,0XFF,0XFF,0XFE,0X00,0X01,0XFF,0XFF,0X0F,0XF8,0X7F,0XFF,0X1F,0XFF,
0XFF,0XFF,0XFF,0X00,0X00,0XFF,0XFF,0X0F,0XF0,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,
0X00,0X00,0X7F,0XFF,0X0F,0XF1,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X1F,
0XFF,0X0F,0XF1,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X1F,0XFF,0X0F,0XF1,
0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X1F,0XFF,0X0F,0XF1,0XFF,0XFF,0X1F,
0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X0F,0XFF,0X0F,0XF9,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XF8,0X0F,0XFF,0X0F,0XF8,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,
0X0F,0XFF,0X0F,0XF8,0X7F,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X67,0XFF,0X0F,
0XF8,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFE,0X0F,0XF8,0X7F,0XF0,
0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE1,0XFE,0X0F,0XF8,0XFF,0XF0,0X00,0X7F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XF0,0X7E,0X0F,0XF1,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XF8,0X7E,0X0F,0XF1,0XFF,0XFF,0XE1,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X7E,
0X0F,0XF1,0XFF,0XF3,0X80,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X3E,0X0F,0XF1,0XFF,
0XF1,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X3F,0X1F,0XF0,0XFF,0XF1,0X1C,0X7F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,0XFF,0XF8,0XFF,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X1F,0XFF,0XF8,0X7F,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X9F,0XFF,0XF8,0X7F,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X9F,0XFF,0XF8,
0X7F,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X9F,0XFF,0XF8,0X7F,0XF1,0X1C,
0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X8F,0XFF,0XF0,0XFF,0XF1,0X1C,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X0F,0XFF,0XF1,0XFF,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFE,
0X00,0X00,0X3F,0XF1,0XFF,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X07,
0XF1,0XFF,0XF0,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X00,0X03,0XF0,0XFF,0XF8,
0X1C,0X7F,0XFF,0XFF,0XFF,0XF0,0X03,0XFF,0XFC,0X00,0X00,0XFF,0XF8,0X1C,0X7F,0XFF,
0XFF,0XFF,0XC0,0X1F,0X80,0X03,0X80,0X00,0X7F,0XF8,0X3C,0X7F,0XFF,0XFF,0XFF,0X00,
0X30,0X00,0X00,0X18,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X07,0XC0,0X00,0X00,
0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,0X00,0X00,0X00,0X01,0X00,0X7F,
0XF1,0XFE,0X7F,0XFF,0XFF,0XF0,0X7E,0X00,0X00,0X00,0X01,0X80,0XFF,0XF1,0XFE,0X7F,
0XFF,0XFF,0XE0,0XFF,0X00,0X00,0X00,0X01,0XC1,0XFF,0XF1,0X1E,0X7F,0XFF,0XFF,0X81,
0XFF,0X00,0X00,0X00,0X00,0X41,0XFF,0XF1,0X1E,0X7F,0XFF,0XFF,0X03,0XFE,0X00,0X80,
0X00,0X00,0X38,0X7F,0XF1,0X1E,0X7F,0XFF,0XFE,0X07,0XFF,0X01,0XC0,0X00,0X00,0X3C,
0X7F,0XF1,0X1E,0X7F,0XFF,0XFC,0X0F,0XFF,0X80,0X00,0X00,0X00,0X1C,0X7F,0XF1,0X1E,
0X7F,0XFF,0XFC,0X1F,0XFF,0X00,0X00,0X00,0X00,0X0E,0X7F,0XF1,0X1E,0X7F,0XFF,0XFC,
0X3F,0XFE,0X00,0X00,0X00,0X00,0X0E,0X3F,0XF1,0X1E,0X7F,0XFF,0XFC,0X7F,0XFC,0X00,
0X00,0X00,0X00,0X07,0X1F,0XF1,0X1E,0X7F,0XFF,0XF8,0XFF,0XFE,0X00,0X00,0X00,0X00,
0X03,0X1F,0XF1,0X1E,0X7F,0XFF,0XF1,0XFF,0XFF,0XE0,0X00,0X00,0X00,0X01,0X8F,0XF0,
0X1E,0X7F,0XFF,0XE3,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X01,0X8F,0XF0,0X1E,0X7F,0XFF,
0XE3,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X00,0X0F,0XF0,0X00,0X7F,0XFF,0XC3,0XFF,0XFF,
0XDF,0X80,0X00,0X00,0X00,0X0F,0XF0,0X00,0X7F,0XFF,0XC3,0XFF,0XFF,0XCF,0XE0,0X00,
0X00,0X00,0X0F,0XF0,0X00,0X7F,0XFF,0XC3,0XFF,0XFF,0XC7,0XF0,0X00,0X00,0X00,0X0F,
0XFF,0XFF,0XFF,0XFF,0XC7,0XFF,0XFF,0XE1,0XFC,0X00,0X00,0X00,0X0F,0XF3,0XFF,0XFF,
0XFF,0X87,0XFF,0XFF,0XF0,0X1F,0X80,0X00,0X01,0X0F,0XF1,0XFF,0XFF,0XFF,0X8F,0XFF,
0XFF,0XFE,0X03,0XFF,0XF0,0X06,0X7F,0XF8,0X7F,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0X80,
0X3F,0XFE,0X18,0X7F,0XF8,0X3F,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XF0,0X00,0X01,0XC0,
0XFF,0XFE,0X1F,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X01,0XFF,0XFF,0X07,
0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X01,0XFF,0XFF,0X83,0XFF,0XFF,0X0F,
0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X03,0XFF,0XFF,0XE0,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0XF0,0X7F,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE3,0XFF,0XFF,0XF8,0X7F,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,
0XE0,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0XC1,0XFF,0XFF,
0X87,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0X07,0XFF,0XFF,0X87,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XFE,0X0F,0XFF,0XFF,0X83,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XE3,0XFF,0XF8,0X1F,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,
0XF0,0X7F,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,0XFF,0XF1,0XFF,0XFF,
0XFF,0XE3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,0XFF,0XF3,0XFF,0XFF,0XFF,0XF1,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,
0XFF,0XFC,0X00,0XFF,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,0XFF,0XF8,0X00,
0X7F,0XFF,0XFC,0X3F,0XFF,0XF8,0XFF,0XFF,0XFF,0XF3,0XFF,0XF8,0X00,0X7F,0XFF,0XFE,
0X0F,0XFF,0XF0,0XFF,0XFF,0XFF,0XF3,0XFF,0XF8,0XC4,0XFF,0XFF,0XFF,0X87,0XFF,0XC0,
0XFF,0XFF,0XFF,0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,0XFF,0XC3,0XFF,0XC1,0XFF,0XFF,0XFF,
0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,0XFF,0XF0,0XFF,0X83,0XFF,0XFF,0XFF,0XF1,0XFF,0XF1,
0XE7,0XFF,0XFF,0XFF,0XF8,0XFF,0X07,0XFF,0XFF,0XFF,0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,
0XFF,0XF8,0XFE,0X0F,0XFF,0XFF,0XFF,0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,0XFF,0XFC,0XFE,
0X3F,0XFF,0XFF,0XFF,0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,0XFF,0XFE,0X7F,0XFF,0XFF,0XFF,
0XFF,0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,0XF1,0XFF,
0XF1,0XE7,0XFF,0XFF,0XFF,0XFF,0X3F,0XFF,0XFF,0XFF,0XFF,0XF1,0XFF,0XF0,0XE7,0XFF,
0XFF,0XFF,0XFF,0X3F,0XFF,0XFF,0XFF,0XFF,0XF1,0XFF,0XF8,0X00,0X7F,0XFF,0XFF,0XFF,
0X3F,0XFF,0XFF,0XFF,0XFF,0XF1,0XFF,0XF8,0X00,0X7F,0XFF,0XFF,0XFF,0X1F,0XFF,0XFF,
0XFF,0XFF,0XF1,0XFF,0XFC,0X00,0X7F,0XFF,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XF1,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XF1,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0XFF,0XF0,0X00,0XFF,0XFF,0XFF,
0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFF,0X0F,0XFF,
0XFF,0XFF,0XFF,0XF0,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,
0XF0,0X7F,0XFF,0XF8,0X7F,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,
0XFC,0X7F,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0XFC,0X7F,0XFF,
0XFF,0XFF,0X8F,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0X87,
0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XC7,0XFF,0XFF,0XFF,
0XFF,0XF0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,
0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XF0,0X00,0X7F,
0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFF,
0XC3,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFF,0XE1,0XFF,0XFF,
0XFF,0XFF,0XE0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XE0,0XFF,0XFF,0XFF,0XFF,0XE0,
0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XF0,0XFF,0XFF,0XFF,0XFF,0XC0,0X7F,0XFF,0XFC,
0X7F,0XFF,0XFF,0XFF,0XF8,0X7F,0XFF,0XFF,0XFF,0XC0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,
0XFF,0XF8,0X7F,0XFF,0XFF,0XFF,0XC0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XF8,0X3F,
0XFF,0XFF,0XFF,0XC4,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XFC,0X3F,0XFF,0XFF,0XFF,
0X86,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XFE,0X3F,0XFF,0XFF,0XFF,0X84,0X7F,0XFF,
0XF8,0X7F,0XFF,0XFF,0XFF,0XFE,0X3F,0XFF,0XFF,0XFF,0X0C,0X7F,0XF0,0X00,0X7F,0XFF,
0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFE,0X0C,0X7F,0XF0,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC7,0XFF,0XFF,0XFE,0X1C,0X7F,0XF0,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,
0XFE,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC1,0XFF,0XFF,0XFE,0X3C,0X7F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XFF,0XFE,0X7C,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFC,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XF8,0X1F,0XFF,0XF8,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X0F,
0XFF,0XE1,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X3C,
0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X1C,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X20,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFC,0X70,0X0C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFC,0XF0,0X0C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X78,
0X0C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X38,0X0C,0X7F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X0C,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X80,0X7C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC0,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,};
const unsigned char gImage_red1[2756] PROGMEM= {/* 0X81,0X01,0XD4,0X00,0X68,0X00, */
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,
0X03,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0XE3,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X63,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE7,0XF8,0X23,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XC7,0XF8,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X8B,0XF9,0X83,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X99,0XF9,0X83,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X99,0XFD,0X83,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X1B,0XFF,0XC3,0XFF,0XFF,0XFE,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFE,0X3F,0XFF,0XC3,0XFF,0XF1,0XFE,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,
0X80,0X3F,0XFF,0XC3,0XFF,0XF1,0XFE,0X7F,0XFF,0XFF,0XFF,0XFF,0XE0,0X3F,0XFF,0XFF,
0X83,0XFF,0XF1,0X1E,0X7F,0XFF,0XFF,0XFF,0XFF,0XC0,0XFF,0XFF,0XFF,0X83,0XFF,0XF1,
0X1E,0X7F,0XFF,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0X03,0XFF,0XF1,0X1E,0X7F,0XFF,
0XFF,0XFF,0XFF,0X8F,0XFF,0XFF,0XFF,0X03,0XFF,0XF1,0X1E,0X7F,0XFF,0XFB,0XFF,0XFF,
0X3F,0XFF,0XFF,0XFF,0X03,0XFF,0XF1,0X1E,0X7F,0XFF,0XFB,0XFF,0XFE,0X3F,0XFF,0XFF,
0XFE,0X03,0XFF,0XF1,0X1E,0X7F,0XFF,0XF3,0XFF,0XF8,0X7F,0XFF,0XFF,0XFE,0X03,0XFF,
0XF1,0X1E,0X7F,0XFF,0XE1,0XFF,0XF0,0XFF,0XFF,0XFF,0XFC,0X23,0XFF,0XF1,0X1E,0X7F,
0XFF,0XE1,0XFF,0XC3,0XFF,0XFF,0XFF,0XC0,0XE3,0XFF,0XF1,0X1E,0X7F,0XFF,0XC4,0XFF,
0X87,0XFF,0XFF,0XFF,0X01,0XE3,0XFF,0XF0,0X1E,0X7F,0XFF,0XC4,0XFF,0X8F,0XFF,0XFF,
0XFE,0X01,0XE1,0XFF,0XF0,0X00,0X7F,0XFF,0XCC,0XFF,0X8F,0XFF,0XFF,0XF8,0X07,0XE1,
0XFF,0XF0,0X00,0X7F,0XFF,0XCC,0XFF,0X83,0XFF,0XFF,0XF8,0X3F,0XF1,0XFF,0XF0,0X00,
0X7F,0XFF,0X8C,0XFF,0XC0,0X00,0X3F,0XF8,0X00,0X31,0XFF,0XFF,0XFF,0XFF,0XFF,0X9C,
0XFF,0XE0,0X00,0X3F,0XFE,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0X9C,0XFF,0XE0,0X00,
0X3F,0XFF,0X00,0X00,0XFF,0XF8,0X0F,0X7F,0XFF,0X9C,0XFF,0X00,0X7F,0XFF,0XFF,0XFF,
0X08,0X7F,0XF8,0X0F,0X7F,0XFF,0X9C,0XFF,0X01,0XFF,0XFF,0XFF,0XFF,0X80,0X7F,0XF8,
0X06,0X7F,0XFF,0X9C,0XFE,0X07,0XFF,0XFF,0XFF,0XFF,0XC0,0X7F,0XF1,0XC4,0X7F,0XFF,
0X9C,0XFC,0X1F,0XFF,0XFF,0XFF,0XFF,0XC0,0X7F,0XF1,0XC0,0X7F,0XFF,0X9C,0XF8,0X7F,
0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XF1,0XC0,0XFF,0XFF,0X9C,0XF0,0XFF,0XFF,0XFF,0XFF,
0XFF,0XE0,0X7F,0XF1,0XC0,0XFF,0XFF,0X9C,0XE1,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,
0XF1,0XC1,0XFF,0XFF,0X9C,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XF1,0XC3,0XFF,
0XFF,0X98,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XF1,0XC3,0XFF,0XFF,0X98,0X0F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XF1,0XC3,0XFF,0XFF,0X98,0X1F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XF0,0X7F,0XF1,0XC7,0XFF,0XFF,0X80,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,
0X7F,0XF1,0XC7,0XFF,0XFF,0X80,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XF1,0X87,
0XFF,0XFF,0X80,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XF0,0X00,0X7F,0XFF,0X80,
0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X07,0XFF,0XF0,0X00,0X7F,0XFF,0XC0,0XFF,0XFF,0XFF,
0XFF,0XC0,0XFE,0X0F,0XFF,0XF0,0X00,0XFF,0XFF,0XC0,0XFF,0XFF,0XFF,0XFF,0X07,0XFE,
0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XC1,0XFF,0XFF,0XFF,0XF8,0X1F,0XFF,0X0F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XE1,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0X87,0XFF,0XF8,0X00,0X7F,0XFF,
0XE1,0XFF,0XFF,0XFF,0XE0,0XFF,0XFF,0XC3,0XFF,0XF8,0X00,0X7F,0XFF,0XE1,0XFF,0XFF,
0XFF,0XE1,0XFF,0XFF,0XE1,0XFF,0XF8,0X00,0X7F,0XFF,0XF1,0XFF,0XFF,0XFF,0XE7,0XFF,
0XFF,0XF8,0XFF,0XF0,0XE7,0XFF,0XFF,0XF9,0XFF,0XFF,0XFF,0XE7,0XFF,0XFF,0XF8,0X7F,
0XF1,0XE7,0XFF,0XFF,0XF8,0XFF,0XFF,0XFF,0X8F,0XFF,0XFF,0XF8,0X7F,0XF1,0XE7,0XFF,
0XFF,0XF8,0XFF,0XFF,0XFE,0X1F,0XFF,0XFF,0XFC,0X7F,0XF1,0XE7,0XFF,0XFF,0XF8,0XFF,
0XFF,0XF0,0X1F,0XFF,0XFF,0XFC,0X7F,0XF1,0XE7,0XFF,0XFF,0XFC,0X7F,0XFF,0XC0,0X0F,
0XFF,0XFF,0XFC,0X7F,0XF1,0XE7,0XFF,0XFF,0XFC,0X7F,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,
0X7F,0XF1,0XE7,0XFF,0XFF,0XFC,0X3F,0XFF,0XFF,0XC0,0XFF,0XFF,0XFC,0X7F,0XF1,0XE7,
0XFF,0XFF,0XFC,0X3F,0XFF,0XFF,0XC1,0XFF,0XFF,0XF8,0X7F,0XF0,0XE7,0XFF,0XFF,0XFE,
0X1F,0XFF,0XFF,0XC3,0XFB,0XFF,0XF8,0X7F,0XF8,0X00,0X7F,0XFF,0XFE,0X1F,0XFF,0XFF,
0XC3,0XFB,0XFF,0XF8,0X7F,0XF8,0X00,0X7F,0XFF,0XFF,0X0F,0XFF,0XFF,0XE3,0XE3,0X9F,
0XF8,0X7F,0XFC,0X00,0X7F,0XFF,0XFF,0X0F,0XFF,0XFF,0XE1,0XC0,0X0F,0XF8,0X7F,0XFF,
0XFF,0XFF,0XFF,0XFF,0X80,0X07,0XFF,0XE0,0X80,0X0F,0XF8,0X7F,0XFF,0XFF,0XFF,0XFF,
0XFF,0X80,0X00,0X7F,0XE0,0X00,0X0F,0XF8,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XC0,0X00,
0X3F,0XF0,0X00,0X1F,0XF8,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XF0,0X00,0X0F,0XFF,0X83,
0X3F,0XF8,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFC,0X00,0X07,0XFF,0XE7,0X1F,0XF8,0X7F,
0XFF,0X1F,0XFF,0XFF,0XFF,0XFE,0X00,0X01,0XFF,0XFF,0X0F,0XF8,0X7F,0XFF,0X1F,0XFF,
0XFF,0XFF,0XFF,0X00,0X00,0XFF,0XFF,0X0F,0XF0,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,
0X00,0X00,0X7F,0XFF,0X0F,0XF1,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X1F,
0XFF,0X0F,0XF1,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X1F,0XFF,0X0F,0XF1,
0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X1F,0XFF,0X0F,0XF1,0XFF,0XFF,0X1F,
0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X0F,0XFF,0X0F,0XF9,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XF8,0X0F,0XFF,0X0F,0XF8,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,
0X0F,0XFF,0X0F,0XF8,0X7F,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X67,0XFF,0X0F,
0XF8,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFE,0X0F,0XF8,0X7F,0XF0,
0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XE1,0XFE,0X0F,0XF8,0XFF,0XF0,0X00,0X7F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XF0,0X7E,0X0F,0XF1,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XF8,0X7E,0X0F,0XF1,0XFF,0XFF,0XE1,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X7E,
0X0F,0XF1,0XFF,0XF3,0X80,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X3E,0X0F,0XF1,0XFF,
0XF1,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X3F,0X1F,0XF0,0XFF,0XF1,0X1C,0X7F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,0XFF,0XF8,0XFF,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X1F,0XFF,0XF8,0X7F,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X9F,0XFF,0XF8,0X7F,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X9F,0XFF,0XF8,
0X7F,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X9F,0XFF,0XF8,0X7F,0XF1,0X1C,
0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X8F,0XFF,0XF0,0XFF,0XF1,0X1C,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X0F,0XFF,0XF1,0XFF,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFE,
0X00,0X00,0X3F,0XF1,0XFF,0XF1,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X07,
0XF1,0XFF,0XF0,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X00,0X03,0XF0,0XFF,0XF8,
0X1C,0X7F,0XFF,0XFF,0XFF,0XF0,0X03,0XFF,0XFC,0X00,0X00,0XFF,0XF8,0X1C,0X7F,0XFF,
0XFF,0XFF,0XC0,0X1F,0X80,0X03,0X80,0X00,0X7F,0XF8,0X3C,0X7F,0XFF,0XFF,0XFF,0X00,
0X30,0X00,0X00,0X18,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X07,0XC0,0X00,0X00,
0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X1F,0X00,0X00,0X00,0X01,0X00,0X7F,
0XF1,0XFE,0X7F,0XFF,0XFF,0XF0,0X7E,0X00,0X00,0X00,0X01,0X80,0XFF,0XF1,0XFE,0X7F,
0XFF,0XFF,0XE0,0XFF,0X00,0X00,0X00,0X01,0XC1,0XFF,0XF1,0X1E,0X7F,0XFF,0XFF,0X81,
0XFF,0X00,0X00,0X00,0X00,0X41,0XFF,0XF1,0X1E,0X7F,0XFF,0XFF,0X03,0XFE,0X00,0X80,
0X00,0X00,0X38,0X7F,0XF1,0X1E,0X7F,0XFF,0XFE,0X07,0XFF,0X01,0XC0,0X00,0X00,0X3C,
0X7F,0XF1,0X1E,0X7F,0XFF,0XFC,0X0F,0XFF,0X80,0X00,0X00,0X00,0X1C,0X7F,0XF1,0X1E,
0X7F,0XFF,0XFC,0X1F,0XFF,0X00,0X00,0X00,0X00,0X0E,0X7F,0XF1,0X1E,0X7F,0XFF,0XFC,
0X3F,0XFE,0X00,0X00,0X00,0X00,0X0E,0X3F,0XF1,0X1E,0X7F,0XFF,0XFC,0X7F,0XFC,0X00,
0X00,0X00,0X00,0X07,0X1F,0XF1,0X1E,0X7F,0XFF,0XF8,0XFF,0XFE,0X00,0X00,0X00,0X00,
0X03,0X1F,0XF1,0X1E,0X7F,0XFF,0XF1,0XFF,0XFF,0XE0,0X00,0X00,0X00,0X01,0X8F,0XF0,
0X1E,0X7F,0XFF,0XE3,0XFF,0XFF,0XF8,0X00,0X00,0X00,0X01,0X8F,0XF0,0X1E,0X7F,0XFF,
0XE3,0XFF,0XFF,0XFC,0X00,0X00,0X00,0X00,0X0F,0XF0,0X00,0X7F,0XFF,0XC3,0XFF,0XFF,
0XDF,0X80,0X00,0X00,0X00,0X0F,0XF0,0X00,0X7F,0XFF,0XC3,0XFF,0XFF,0XCF,0XE0,0X00,
0X00,0X00,0X0F,0XF0,0X00,0X7F,0XFF,0XC3,0XFF,0XFF,0XC7,0XF0,0X00,0X00,0X00,0X0F,
0XFF,0XFF,0XFF,0XFF,0XC7,0XFF,0XFF,0XE1,0XFC,0X00,0X00,0X00,0X0F,0XF3,0XFF,0XFF,
0XFF,0X87,0XFF,0XFF,0XF0,0X1F,0X80,0X00,0X01,0X0F,0XF1,0XFF,0XFF,0XFF,0X8F,0XFF,
0XFF,0XFE,0X03,0XFF,0XF0,0X06,0X7F,0XF8,0X7F,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0X80,
0X3F,0XFE,0X18,0X7F,0XF8,0X3F,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XF0,0X00,0X01,0XC0,
0XFF,0XFE,0X1F,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X01,0XFF,0XFF,0X07,
0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X01,0XFF,0XFF,0X83,0XFF,0XFF,0X0F,
0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X03,0XFF,0XFF,0XE0,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0XF0,0X7F,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE3,0XFF,0XFF,0XF8,0X7F,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,
0XE0,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0XC1,0XFF,0XFF,
0X87,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0X07,0XFF,0XFF,0X87,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,0XFE,0X0F,0XFF,0XFF,0X83,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XE3,0XFF,0XF8,0X1F,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE3,0XFF,
0XF0,0X7F,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,0XFF,0XF1,0XFF,0XFF,
0XFF,0XE3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,0XFF,0XF3,0XFF,0XFF,0XFF,0XF1,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,
0XFF,0XFC,0X00,0XFF,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,0XFF,0XF8,0X00,
0X7F,0XFF,0XFC,0X3F,0XFF,0XF8,0XFF,0XFF,0XFF,0XF3,0XFF,0XF8,0X00,0X7F,0XFF,0XFE,
0X0F,0XFF,0XF0,0XFF,0XFF,0XFF,0XF3,0XFF,0XF8,0XC4,0XFF,0XFF,0XFF,0X87,0XFF,0XC0,
0XFF,0XFF,0XFF,0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,0XFF,0XC3,0XFF,0XC1,0XFF,0XFF,0XFF,
0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,0XFF,0XF0,0XFF,0X83,0XFF,0XFF,0XFF,0XF1,0XFF,0XF1,
0XE7,0XFF,0XFF,0XFF,0XF8,0XFF,0X07,0XFF,0XFF,0XFF,0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,
0XFF,0XF8,0XFE,0X0F,0XFF,0XFF,0XFF,0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,0XFF,0XFC,0XFE,
0X3F,0XFF,0XFF,0XFF,0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,0XFF,0XFE,0X7F,0XFF,0XFF,0XFF,
0XFF,0XF1,0XFF,0XF1,0XE7,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,0XF1,0XFF,
0XF1,0XE7,0XFF,0XFF,0XFF,0XFF,0X3F,0XFF,0XFF,0XFF,0XFF,0XF1,0XFF,0XF0,0XE7,0XFF,
0XFF,0XFF,0XFF,0X3F,0XFF,0XFF,0XFF,0XFF,0XF1,0XFF,0XF8,0X00,0X7F,0XFF,0XFF,0XFF,
0X3F,0XFF,0XFF,0XFF,0XFF,0XF1,0XFF,0XF8,0X00,0X7F,0XFF,0XFF,0XFF,0X1F,0XFF,0XFF,
0XFF,0XFF,0XF1,0XFF,0XFC,0X00,0X7F,0XFF,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XF1,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XF1,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0XFF,0XF0,0X00,0XFF,0XFF,0XFF,
0XFF,0X1F,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFF,0X0F,0XFF,
0XFF,0XFF,0XFF,0XF0,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,
0XF0,0X7F,0XFF,0XF8,0X7F,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,
0XFC,0X7F,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0XFC,0X7F,0XFF,
0XFF,0XFF,0X8F,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0X87,
0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XC7,0XFF,0XFF,0XFF,
0XFF,0XF0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,
0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XF0,0X00,0X7F,
0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFF,
0XC3,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XF0,0X00,0X7F,0XFF,0XFF,0XFF,0XE1,0XFF,0XFF,
0XFF,0XFF,0XE0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XE0,0XFF,0XFF,0XFF,0XFF,0XE0,
0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XF0,0XFF,0XFF,0XFF,0XFF,0XC0,0X7F,0XFF,0XFC,
0X7F,0XFF,0XFF,0XFF,0XF8,0X7F,0XFF,0XFF,0XFF,0XC0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,
0XFF,0XF8,0X7F,0XFF,0XFF,0XFF,0XC0,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XF8,0X3F,
0XFF,0XFF,0XFF,0XC4,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XFC,0X3F,0XFF,0XFF,0XFF,
0X86,0X7F,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XFE,0X3F,0XFF,0XFF,0XFF,0X84,0X7F,0XFF,
0XF8,0X7F,0XFF,0XFF,0XFF,0XFE,0X3F,0XFF,0XFF,0XFF,0X0C,0X7F,0XF0,0X00,0X7F,0XFF,
0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFE,0X0C,0X7F,0XF0,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC7,0XFF,0XFF,0XFE,0X1C,0X7F,0XF0,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,
0XFE,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC1,0XFF,0XFF,0XFE,0X3C,0X7F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X7F,0XFF,0XFE,0X7C,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XF0,0X3F,0XFF,0XFC,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XF8,0X1F,0XFF,0XF8,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X0F,
0XFF,0XE1,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X3C,
0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X1C,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X20,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFC,0X70,0X0C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFC,0XF0,0X0C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X78,
0X0C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X38,0X0C,0X7F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X0C,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X1C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X80,0X7C,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC0,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,};

  ////////FUNCTION//////
  void driver_delay_us(unsigned int xus);
  void driver_delay_xms(unsigned long xms);
  void DELAY_S(unsigned int delaytime);     
  void SPI_Delay(unsigned char xrate);
  void SPI_Write(unsigned char value);
  void EPD_W21_WriteDATA(unsigned char command);
  void EPD_W21_WriteCMD(unsigned char command);
  //EPD
  void EPD_W21_Init(void);
  void EPD_init(void);
  void PIC_display(const unsigned char* picData_old,const unsigned char* picData_new);
  void EPD_sleep(void);
  void EPD_refresh(void);
  void lcd_chkstatus(void);
  void PIC_display_Clean(void);
  void PIC_display_Black(const unsigned char* picData_old);
  unsigned char HRES,VRES_byte1,VRES_byte2;

  void setup() {
    pinMode(BUSY_Pin, INPUT); 
    pinMode(RES_Pin, OUTPUT);  
    pinMode(DC_Pin, OUTPUT);    
    pinMode(CS_Pin, OUTPUT);    
    pinMode(SCK_Pin, OUTPUT);    
    pinMode(SDI_Pin, OUTPUT);    
    //PIC_display_Clean();
  }
  //Tips//
  /*When the electronic paper is refreshed in full screen, the picture flicker is a normal phenomenon, and the main function is to clear the display afterimage in the previous picture.
    When the local refresh is performed, the screen does not flash.*/
  /*When you need to transplant the driver, you only need to change the corresponding IO. The BUSY pin is the input mode and the others are the output mode. */

  void loop() {
    while(1)
    {
      //PICTURE1
      EPD_init(); //EPD init
      PIC_display(gImage_black1,gImage_red1);//EPD_picture1
      //PIC_display_Black(gImage_black2);
      EPD_refresh();//EPD_refresh   
      EPD_sleep();//EPD_sleep,Sleep instruction is necessary, please do not delete!!!
      delay(6000);
      
      
    //  //PICTURE Clean
    //   EPD_init(); //EPD init
    //  PIC_display_Clean();
    //  EPD_refresh();//EPD_refresh   
    //  EPD_sleep();//EPD_sleep,Sleep instruction is necessary, please do not delete!!!
    //  while(1);

    }


  }
  /////////////////////delay//////////////////////////////////////
  void driver_delay_us(unsigned int xus)  //1us
  {
    for(;xus>1;xus--);
  }
  void driver_delay_xms(unsigned long xms) //1ms
  {  
      unsigned long i = 0 , j=0;

      for(j=0;j<xms;j++)
    {
          for(i=0; i<256; i++);
      }
  }
  void DELAY_S(unsigned int delaytime)     
  {
    int i,j,k;
    for(i=0;i<delaytime;i++)
    {
      for(j=0;j<4000;j++)           
      {
        for(k=0;k<222;k++);
                  
      }
    }
  }
  //////////////////////SPI///////////////////////////////////
  void SPI_Delay(unsigned char xrate)
  {
    unsigned char i;
    while(xrate)
    {
      for(i=0;i<2;i++);
      xrate--;
    }
  }


  void SPI_Write(unsigned char value)                                    
  {                                                           
      unsigned char i;  
    SPI_Delay(1);
      for(i=0; i<8; i++)   
      {
          EPD_W21_CLK_0;
        SPI_Delay(1);
        if(value & 0x80)
            EPD_W21_MOSI_1;
          else
            EPD_W21_MOSI_0;   
          value = (value << 1); 
        SPI_Delay(1);
        driver_delay_us(1);
          EPD_W21_CLK_1; 
          SPI_Delay(1);
      }
  }

  void EPD_W21_WriteCMD(unsigned char command)
  {
    SPI_Delay(1);
    EPD_W21_CS_0;                   
    EPD_W21_DC_0;   // command write
    SPI_Write(command);
    EPD_W21_CS_1;
  }
  void EPD_W21_WriteDATA(unsigned char command)
  {
    SPI_Delay(1);
    EPD_W21_CS_0;                   
    EPD_W21_DC_1;   // command write
    SPI_Write(command);
    EPD_W21_CS_1;
  }



  /////////////////EPD settings Functions/////////////////////
  void EPD_W21_Init(void)
  {
    EPD_W21_RST_0;    // Module reset
    driver_delay_xms(1000);//At least 10ms delay 
    EPD_W21_RST_1;
    driver_delay_xms(1000);//At least 10ms delay 
    
  }
  void EPD_init(void)
  {
      HRES=0x68;            //104
      VRES_byte1=0x00;      //212
      VRES_byte2=0xd4;
    
      EPD_W21_Init(); //Electronic paper IC reset
    /*
      EPD_W21_WriteCMD(0x06);         //boost soft start
      EPD_W21_WriteDATA (0x17);   //A
      EPD_W21_WriteDATA (0x17);   //B
      EPD_W21_WriteDATA (0x17);   //C       
  */
      EPD_W21_WriteCMD(0x04);  //Power on
      lcd_chkstatus();        //waiting for the electronic paper IC to release the idle signal

      EPD_W21_WriteCMD(0x00);     //panel setting
      EPD_W21_WriteDATA(0x0f);    //LUT from OTP£¬128x296
      EPD_W21_WriteDATA(0x89);     //VCOM to 0V fast

      EPD_W21_WriteCMD(0x61);     //resolution setting
      EPD_W21_WriteDATA (HRES);          
      EPD_W21_WriteDATA (VRES_byte1);   
      EPD_W21_WriteDATA (VRES_byte2);

      EPD_W21_WriteCMD(0X50);     //VCOM AND DATA INTERVAL SETTING      
      EPD_W21_WriteDATA(0x77);    //WBmode:VBDF 17|D7 VBDW 97 VBDB 57   WBRmode:VBDF F7 |VBDW 77 |VBDB 37  |VBDR B7
    }
  void EPD_refresh(void)
  {
      EPD_W21_WriteCMD(0x12);     //DISPLAY REFRESH   
      driver_delay_xms(100);          //!!!The delay here is necessary, 200uS at least!!!     
      lcd_chkstatus();
  } 
  void EPD_sleep(void)
  {
      EPD_W21_WriteCMD(0X50);  //VCOM AND DATA INTERVAL SETTING     
      EPD_W21_WriteDATA(0xf7); //WBmode:VBDF 17|D7 VBDW 97 VBDB 57    WBRmode:VBDF F7 VBDW 77 VBDB 37  VBDR B7  
      
      EPD_W21_WriteCMD(0X02);   //power off
      lcd_chkstatus();    //need to add

    
  }


  void PIC_display(const unsigned char* picData_old,const unsigned char* picData_new)
  {
      unsigned int i;
      EPD_W21_WriteCMD(0x10);        //Transfer old data
      for(i=0;i<sizeof(gImage_black1);i++)      
    {
      EPD_W21_WriteDATA(pgm_read_byte(&picData_old[i]));
    }
    
      EPD_W21_WriteCMD(0x13);        //Transfer new data
      for(i=0;i<sizeof(gImage_red1);i++)      
    {
      EPD_W21_WriteDATA(pgm_read_byte(&picData_new[i]));
    }
  }

  void PIC_display_Black(const unsigned char* picData_old)//刷黑
  {
      unsigned int i;
      EPD_W21_WriteCMD(0x10);        //Transfer old data
      for(i=0;i<sizeof(gImage_black1);i++)      
    {
      EPD_W21_WriteDATA(pgm_read_byte(&picData_old[i]));
    }
    
  }

  void PIC_display_Clean(void)
  {
      unsigned int i;
      EPD_W21_WriteCMD(0x10);        //Transfer old data
      for(i=0;i<2756;i++)      
    {
      EPD_W21_WriteDATA(0xff);
    }
    
      EPD_W21_WriteCMD(0x13);        //Transfer new data
      for(i=0;i<2756;i++)      
    {
      EPD_W21_WriteDATA(0xff);
    }
  }
  void lcd_chkstatus(void)
  {
    unsigned char busy;
    do
    {
      EPD_W21_WriteCMD(0x71);
      busy = isEPD_W21_BUSY;
      busy =!(busy & 0x01);        
    }
    while(busy);   
    driver_delay_xms(200);                       
  }
  //////////////////////////////////END/////////////////////////////////////////
  
